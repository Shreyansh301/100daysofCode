class Solution {
    public int removeDuplicates(int[] nums) {
        int j = 1;
        for (int i = 1; i < nums.length; i++) {
            if (j == 1 || nums[i] != nums[j - 2]) {
                nums[j++] = nums[i];
            }
        }
        return j;
    }
}

Level -
LOGIC: Explanation
Example - Input: nums = [1,1,1,2,2,3]
Output: 5, nums = [1,1,2,2,3,_]
Explanation: Your function should return k = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.
It does not matter what you leave beyond the returned k (hence they are underscores).
--------------------------------------------------------------------------------------------------------------------------------------
Class Declaration:
The class is named Solution.

Method Declaration:
A public method named removeDuplicates is defined.
It takes an integer array nums as a parameter and returns an integer.

Variable Initialization:
An integer variable j is initialized to 1. This variable j will be used to keep track of the position to place the next unique element in the array.

For Loop:
A for loop starts with i initialized to 1 and runs while i is less than the length of the array nums. This loop iterates over the array starting from the second element.

If Condition:
Inside the loop, there's a condition that checks if j is 1 or if the current element nums[i] is not equal to the element at position j-2 in the array.
This condition ensures that the current element is either the second element in the array (when j is 1) or is different from the element two positions before in the array, which helps in allowing at most two duplicates of each element.

Updating Array:
If the condition is true, the current element nums[i] is assigned to the position j in the array.
The variable j is then incremented by 1.

Return Statement:
After the loop completes, the method returns the value of j.
This value represents the length of the modified array where no element appears more than twice.
