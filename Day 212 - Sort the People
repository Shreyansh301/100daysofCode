class Solution {
    public String[] sortPeople(String[] names, int[] heights) {
        Map<Integer, String> map = new HashMap<>();
        for (int i = 0; i < names.length; i++) {
            map.put(heights[i], names[i]);
        }        
        Arrays.sort(heights);
        String[] result = new String[heights.length];
        int index = 0;
        for (int i = heights.length - 1; i >= 0; i--) {
            result[index] = map.get(heights[i]);
            index++;
        }
        return result;
    }
}

/*
Level - Easy(2418)
LOGIC: Explanation
Example - Input: names = ["Mary","John","Emma"], heights = [180,165,170]
Output: ["Mary","Emma","John"]
Mary is the tallest, followed by Emma and John.
------------------------------------------------------------------------------
Class Declaration:
class Solution: This declares a class named Solution.

Method Declaration:
public String[] sortPeople(String[] names, int[] heights): This method takes two parameters: an array of strings names and an array of integers heights, and returns a sorted array of strings.

Mapping Heights to Names:
Map<Integer, String> map = new HashMap<>();: Creates a HashMap to store heights as keys and corresponding names as values.
for (int i = 0; i < names.length; i++) { map.put(heights[i], names[i]); }: Iterates over the names and heights arrays, inserting each height and name pair into the map.

Sorting Heights:
Arrays.sort(heights);: Sorts the heights array in ascending order.

Creating the Result Array:
String[] result = new String[heights.length];: Creates an array of strings result to store the sorted names.

Filling the Result Array in Descending Order of Heights:
int index = 0;: Initializes an index variable to track the position in the result array.
for (int i = heights.length - 1; i >= 0; i--) { result[index] = map.get(heights[i]); index++; }: Iterates over the sorted heights array from the highest to the lowest value, retrieves the corresponding name from the map, and stores it in the result array.

Return Statement:
return result;: Returns the result array containing the names sorted by their corresponding heights in descending order.
 */