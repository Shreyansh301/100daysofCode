SELECT (
        SELECT DISTINCT salary
        FROM employee
        ORDER BY salary DESC LIMIT 1 offset 1
        ) AS SecondHighestSalary;

LOGIC: Explanation 
Example - Input: 

Employee table:
+----+--------+
| id | salary |
+----+--------+
| 1  | 100    |
| 2  | 200    |
| 3  | 300    |
+----+--------+
Output: 
+---------------------+
| SecondHighestSalary |
+---------------------+
| 200                 |
+---------------------+

This SQL code is designed to retrieve the second-highest salary from the "employee" table. Let's break down the code:
SELECT DISTINCT salary: This inner query selects all distinct salary values from the "employee" table.
FROM employee: Specifies that the data is being retrieved from the "employee" table.
ORDER BY salary DESC: Orders the salary values in descending order, so the highest salary comes first.
LIMIT 1 OFFSET 1: This part of the query limits the result set to one row, starting from the second row. In other words, it skips the first row (highest salary) and retrieves the second row, which is the second-highest salary.
SELECT (...) AS SecondHighestSalary: This outer query selects the result of the inner query (the second-highest salary) and aliases it as "SecondHighestSalary."

Final result of this SQL code is a single column named "SecondHighestSalary" that contains the second-highest salary from the "employee" table.
