class Solution {
    public double mincostToHireWorkers(int[] quality, int[] wage, int k) {
        int n = quality.length;
        int[][] w = new int[n][2];
        for(int i = 0; i<n; i++){
            w[i][0] = quality[i];
            w[i][1] = wage[i];
        }
        double ans = Double.MAX_VALUE;
        int sum = 0;
        // equivalent to sorting by a[1]/a[0]
        Arrays.sort(w,(a,b) -> a[1]*b[0]-b[1]*a[0]);
        // max priorityqueue
        PriorityQueue<Integer> pq = new PriorityQueue<>((a,b)->b-a);
        for(int i = 0; i<k-1; i++){
            sum+=w[i][0]; // sum of qualities
            pq.add(w[i][0]); // list of qualities
        }
        for(int i = k-1; i<n; i++){
            double ratio = w[i][1]/(double)w[i][0];
            int currSum = sum+w[i][0];
            ans = Math.min(ans,currSum*ratio);
            pq.add(w[i][0]);
            sum+=w[i][0]-pq.poll();
        }
        return ans;
    }
}

Level - Hard (857)
LOGIC: Explanation 
Example - Input: quality = [10,20,5], wage = [70,50,30], k = 2
Output: 105.00000
We pay 70 to 0th worker and 35 to 2nd worker.
---------------------------------------------------------------------------------------
The code defines a class Solution with a public method mincostToHireWorkers.
The method takes three parameters: an array quality representing the quality of workers, an array wage representing their wage, and an integer k representing the number of workers to hire.
It initializes some variables including n which stores the length of the quality array, and a 2D array w to store pairs of quality and wage.
The method then populates the w array with quality and wage values from the input arrays.
It initializes ans to a very large value and sum to 0.
It sorts the w array based on the ratio of wage to quality using a lambda expression in Arrays.sort.
It creates a max priority queue pq to store the qualities of workers.
It loops from 0 to k-1 and adds qualities to pq while calculating the sum of qualities in sum.
It then loops from k-1 to n-1 to calculate the minimum cost by iterating through the sorted w array.
Inside this loop, it calculates the ratio of wage to quality for the current worker and updates the ans if a smaller cost is found.
It adds the current worker's quality to pq, updates sum, and removes the maximum quality from pq using pq.poll().
