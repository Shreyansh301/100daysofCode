class Solution {
    public boolean isPowerOfThree(int n) {
        if (n==1){return true;}
        if(n%3 !=0 || n ==0) {
           return false;
        }
        return isPowerOfThree(n/3);
    }
} 

LOGIC: Explanation 
Example - Input: s = "loveleetcode"
Output: 2

The Java code defines a method named isPowerOfThree that checks if a given integer n is a power of three.
The method first checks if n is equal to 1. If true, it returns true since 1 is a power of three.
Next, it checks if n is not divisible evenly by 3 (n % 3 != 0) or if n is zero (n == 0). If either condition is true, it means n is not a power of three, and the method returns false.
If none of the above conditions are met, the method recursively calls itself with the updated value n/3.

The recursion continues until one of the base conditions is met (i.e., n becomes 1 or is not divisible evenly by 3).
