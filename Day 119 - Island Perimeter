class Solution {
  public int islandPerimeter(int[][] grid) {
    int islands = 0;
    int neighbors = 0;

    for (int i = 0; i < grid.length; ++i)
      for (int j = 0; j < grid[0].length; ++j)
        if (grid[i][j] == 1) {
          ++islands;
          if (i - 1 >= 0 && grid[i - 1][j] == 1)
            ++neighbors;
          if (j - 1 >= 0 && grid[i][j - 1] == 1)
            ++neighbors;
        }

    return islands * 4 - neighbors * 2;
  }
}

Level - Easy (463)
LOGIC: Explanation 
Example - Input: grid = [[0,1,0,0],[1,1,1,0],[0,1,0,0],[1,1,0,0]]
Output: 16
The perimeter is the 16 yellow stripes in the image above.
-------------------------------------------------------------------------------
Initialization: The code starts by declaring a class named Solution, inside which there's a method called islandPerimeter that takes a 2D array of integers called grid as input and returns an integer.

Variables: Inside the method, two integer variables are declared and initialized: islands is set to 0, and neighbors is also set to 0.
Iterating through the Grid: The code then uses nested for loops to go through each element of the 2D array grid.

Counting Islands and Neighbors:
If the current element in grid is 1 (representing an island), it increments the islands count.

For each island found:
It checks if there's an island to the left (if j - 1 is within bounds) and increments neighbors if so.
It checks if there's an island above (if i - 1 is within bounds) and increments neighbors if so.

Calculating Perimeter:
Finally, it calculates the total perimeter using the formula: islands * 4 - neighbors * 2. Here's how:
Each island contributes 4 sides to the perimeter (islands * 4).
If two islands are neighboring each other, they share one side, so we subtract twice the number of neighbors (neighbors * 2) from the total perimeter.

Returning the Result: The method then returns the calculated perimeter as an integer.
This code counts the number of islands in the grid and calculates the perimeter by taking into account the shared sides between neighboring islands.
