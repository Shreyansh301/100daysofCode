class Solution {
    public int maxDistance(List<List<Integer>> arrays) {
        int res = Integer.MIN_VALUE;

        int max = arrays.get(0).get(arrays.get(0).size() - 1);
        int min = arrays.get(0).get(0);
        for (int i = 1; i < arrays.size(); i++) {
            res = Math.max(res, Math.abs(arrays.get(i).get(0) - max));
            res = Math.max(res,
                    Math.abs(arrays.get(i).get(arrays.get(i).size() - 1) - min));

            max = Math.max(max, arrays.get(i).get(arrays.get(i).size() - 1));
            min = Math.min(min, arrays.get(i).get(0));
        }
        return res;
    }
}

/*
Level - 624 (Medium)
LOGIC: Explanation 
Example - Input: arrays = [[1,2,3],[4,5],[1,2,3]]
Output: 4
One way to reach the maximum distance 4 is to pick 1 in the first or third array and pick 5 in the second array.
-------------------------------------------------------------------------------------------------------------------
Purpose: 
The code is designed to find the maximum distance between the minimum element of one list and the maximum element of another list within a list of lists (arrays).

Variables:
res: Stores the maximum distance found so far.
max: Tracks the maximum element encountered from the lists.
min: Tracks the minimum element encountered from the lists.

Initialization:
max is initialized to the last element of the first list in arrays.
min is initialized to the first element of the first list in arrays.

Loop through arrays:
Starts from the second list (index 1).
For each list:
Calculates the potential maximum distance by comparing the first element of the current list with the max from previous lists.
Calculates another potential maximum distance by comparing the last element of the current list with the min from previous lists.
Updates res to be the larger of the previously stored maximum distance or the newly calculated distances.
Updates max to the maximum value between the current max and the last element of the current list.
Updates min to the minimum value between the current min and the first element of the current list.

Return:
Finally, the method returns the maximum distance found (res).
 */