class Solution {
   public void merge(int[] nums1, int m, int[] nums2, int n) {
        int p1 = m - 1;
        int p2 = n - 1;
        int pMerge = m + n - 1;
        
        while (p2 >= 0) {
            if (p1 >= 0 && nums1[p1] > nums2[p2]) {
                nums1[pMerge--] = nums1[p1--];
            } else {
                nums1[pMerge--] = nums2[p2--];
            }
        }
    }
}

Level - Easy (88)
LOGIC: Explanation 
Example - Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output: [1,2,2,3,5,6]
The arrays we are merging are [1,2,3] and [2,5,6].
The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1.
-----------------------------------------------------------------------------------------------
Method Signature: The code defines a method named merge that takes four parameters: nums1 (an integer array), m (an integer representing the number of elements in nums1 that are valid), nums2 (another integer array), and n (an integer representing the number of elements in nums2).

Initialization: It initializes three variables p1, p2, and pMerge. p1 is set to m - 1 (last index of nums1 with valid elements), p2 is set to n - 1 (last index of nums2), and pMerge is set to m + n - 1 (last index of the merged array).

Merging Logic: The code uses a while loop that continues until all elements from nums2 have been merged into nums1. Inside the loop, it checks if p1 is greater than or equal to 0 and if the element at nums1[p1] is greater than the element at nums2[p2]. 
If this condition is true, it copies the element from nums1[p1] to nums1[pMerge] and decrements both p1 and pMerge. If the condition is false, it copies the element from nums2[p2] to nums1[pMerge] and decrements p2 and pMerge.

Merge Completion: Once all elements from nums2 have been merged into nums1, the loop exits, and the method completes.

This code essentially merges two sorted arrays (nums1 and nums2) into nums1, utilizing the fact that both arrays are already sorted. It does this efficiently without requiring additional space for merging, as it directly modifies nums1 in place.
