class Solution {
    public int longestConsecutive(int[] nums) {
        if(nums.length == 0)
            return 0;
        
        int res = 0, count = 0, min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;
        
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] <= -999999999) {nums[i] = Integer.MIN_VALUE; continue;}
            if (nums[i] < min) {min = nums[i];}
            if (nums[i] >= 999999999) {nums[i] = Integer.MAX_VALUE; continue;}
            if (nums[i] > max) {max = nums[i];}
        }
        
        int index = 0 - min;
        
        int[] arr = new int[max + 1 + index];
        for(int i : nums) {
            if(i == Integer.MIN_VALUE  || i == Integer.MAX_VALUE) 
                continue;
            arr[i + index] = 1;
        }
        
        for(int i = min + index; i < max + 1 + index; i++) {
            if(arr[i] == 1) {
                count++;
                res = Math.max(res, count);
            }
            else
                count = 0;
        }
        
        return res;
    }
}

/*
Level - Medium (128)
LOGIC: Explanation
Example - Input: nums = [100,4,200,1,3,2]
Output: 4
The longest consecutive elements sequence is [1, 2, 3, 4]. 
Therefore its length is 4.
-------------------------------------------------------
Function Declaration: 
The class Solution contains the method longestConsecutive(int[] nums) which takes an integer array nums and returns the length of the longest consecutive elements sequence.
Edge Case Check: If the array nums is empty, return 0.

Variable Initialization:
res is used to store the result of the longest consecutive sequence length.
count is used to count the current length of a consecutive sequence.
min and max are initialized to store the minimum and maximum values in the array nums.
First Loop (Finding Min and Max):

Iterate through each element in nums.
Update min and max values based on the current element.
Replace values less than or equal to -999999999 with Integer.MIN_VALUE.
Replace values greater than or equal to 999999999 with Integer.MAX_VALUE.

Index Adjustment:
Calculate index as 0 - min to adjust the array indices.
Create and Fill New Array:

Create a new array arr of size max + 1 + index.
Iterate through nums and mark presence of each element in the arr array.
Ignore elements set to Integer.MIN_VALUE or Integer.MAX_VALUE.
Second Loop (Finding Longest Consecutive Sequence):

Iterate through the new array arr.
If a consecutive element (marked by 1) is found, increment count.
Update res with the maximum value between res and count.
Reset count to 0 if a non-consecutive element (not marked by 1) is encountered.
Return Result: Finally, return the value of res which holds the length of the longest consecutive sequence.
 */